@use './defs' as *;
@use './fontiran';

*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'IRANSans', sans-serif;
}

html {
    font-size: 62.5%;
}

body {
    min-height: 100vh;

  padding:0;
  margin:0;
}

.hidden {
    display: none !important;
}

.invisible {
    visibility: hidden;
}

// set runtime variables
:root {

    --font-size: 1.5rem;
}

@media (max-width: 800px) {
    :root {

        --font-size: 1.3rem;
    }
}

@media (max-width: 600px) {
    :root {
        --font-size: 1.2rem;
    }
}

// reset everything
html {
    scroll-behavior: smooth;
}

ul {
    list-style: none;
}

a {
    color: inherit;
    text-decoration: none;
}

a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
nav,
object,
ol,
output,
p,
pre,
q,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video {
    border: 0;
    margin: 0;
    padding: 0;
    vertical-align: baseline;
}

input,
button {
    color: inherit;
    font-size: inherit;
}

input[type='search']::-webkit-search-decoration,
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-results-button,
input[type='search']::-webkit-search-results-decoration {
    -webkit-appearance: none;
}

// to get rid of chrome's autocomplete styles, this trick "just works" (tm):
input:-webkit-autofill,
input:-webkit-autofill:focus {
    transition: background-color 600000s 0s, color 600000s 0s;
}

// main styles
body {
  display: grid;
  box-sizing: content-box;
  min-height: 100vh;
  margin: auto;
  font-size: var(--font-size);
  grid-template-rows: 1fr;
}
.stretch-child{
  display: grid;
}

.button-block {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: $density-normal $density-large;
  border-radius: $density-small;
  transition: background-color 100ms ease-in-out;
  cursor: pointer;
  margin-bottom: $density-normal;

  &:hover {
    background-color: $color-blue;
  }

  &.selected {
    background-color: $color-purple;
    color: white;
  }
}

.icon {
  display: block;
  width: 1.2em;
  height: 1.2em;
}

.icon-button {
  display: block;
  background-color: inherit;
  border: none;
  cursor: pointer;

  &:not([disabled]) {
    cursor: pointer;
  }

  .icon {
    display: block;

    &:hover {
      //fill: $color-primary;
      transition: fill 200ms ease-in-out;
    }

    &.selected {
      //color: $color-primary;
    }
  }
}



@keyframes rotating {
  from {
    transform: rotate(0turn);
  }
  to {
    transform: rotate(1turn);
  }
}




// style toastr
.toast-container {
    &.toast-top-left {
        top: $density-normal;
        left: $density-normal;
    }

    &.toast-top-left-page {
        top: calc(1.8em + #{$density-larger});
        left: $density-normal;
    }

    .ngx-toastr {
        width: 20em;
        box-shadow: none;
    }
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
